[{"name": "app.py", "content": "from shiny import App, render, ui\nimport micropip\n\nasync def ins():\n    await micropip.install('shinywidgets')\n    await micropip.install('pillow')\nasync def main():\n    await ins()\nmain()\nfrom shinywidgets import output_widget, render_widget\nimport plotly.graph_objects as go\nimport plotly.io as pio\nfrom map import map_fig\n\n\n\napp_ui = ui.page_fluid(\n    ui.h2(\"Hello akadsubbhjkdcvbmhdsf!\"),\n    ui.input_slider(\"n\", \"N\", 0, 100, 20),\n    ui.output_text_verbatim(\"txt\"),\n    output_widget(\"plot\")\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"n*2 is {input.n() * 2}\"\n    \n    \n    @output\n    @render_widget\n    def plot():       \n        return map_fig  \n    \n\n\napp = App(app_ui, server)\n\nif __name__ == '__main__':\n    app.run()\n", "type": "text"}, {"name": "map.py", "content": "import plotly.graph_objects as go\nimport micropip\n\nasync def inst():\n    await micropip.install('pillow')\n\nasync def main():\n    await inst()\nmain()\nfrom PIL import Image\nimport pandas as pd\n\nimg = Image.open('map.png')\n\ni_x, i_y = img.size\n\ncities_coordinates = pd.read_csv(\"cities.csv\")\ncities_coordinates[\"Latitude\"] = cities_coordinates[\"Latitude\"].apply(lambda x : (x - 48.84) / (55.32 - 48.84))\ncities_coordinates[\"Longitude\"] = cities_coordinates[\"Longitude\"].apply(lambda x : (x - 13.50) / (24.80 - 13.50))\n\nlate_times = pd.read_csv(\"city_late.csv\", sep=\";\")\nlate_times = late_times.sort_values('station')\nlate_times = late_times.set_index('station')\n\nstations = late_times.index.to_list()\n\n# Create the data for the pie charts\nlabels = ['On Time', 'Late']\n\ntraces = []\nfor index, row in cities_coordinates.iterrows():\n    value = late_times.iloc[index][\"january\"]\n    trace = go.Pie(\n        labels=labels,\n        values=[value, 1-value],\n        domain=dict(x=[row['Longitude']-0.05, row['Longitude']+0.05], y=[row['Latitude']-0.05, row['Latitude']+0.05]),\n        name=stations[index]\n    )\n    traces.append(trace)\n\n# Create the layout for the chart with a custom CSS background\nlayout = go.Layout(\n    title='Percent of late trains for a given mounth',\n    xaxis=dict(visible=False),\n    yaxis=dict(visible=False),\n    autosize=False,\n    width=i_x,\n    height=i_y,\n    margin=dict(l=0, r=0, t=30, b=0)\n)\n\n# Create the figure and add the traces and layout\nmap_fig = go.Figure(data=traces, layout=layout)\n\n# Add a custom background image using CSS\nmap_fig.update_layout(\n    images=[\n        go.layout.Image(\n            source=img,\n            xref=\"paper\",\n            yref=\"paper\",\n            x=0,\n            y=1,\n            sizex=1,\n            sizey=1,\n            sizing=\"stretch\",\n            opacity=1,\n            layer=\"below\"\n        )\n    ]\n)\n\n# Define the steps for the slider\nsteps = []\nfor column in late_times.columns:\n    values = [[i, 1-i] for i in late_times[column].tolist()]\n    step = dict(\n        method=\"update\",\n        args=[{\"values\": values}],\n        label=column\n    )\n    steps.append(step)\n\n# Add the slider to the figure\nmap_fig.update_layout(\n    sliders=[\n        go.layout.Slider(\n            active=0,\n            currentvalue={\"prefix\": \"Month: \"},\n            steps=steps\n        )\n    ]\n)\n\n\n", "type": "text"}, {"name": "data\\cities.csv", "content": "Q2l0eSxMYXRpdHVkZSxMb25naXR1ZGUNCkJpYcWCeXN0b2ssNTMuMTMyNSwyMy4xNjg4DQpCeWRnb3N6Y3osNTMuMTIzNSwgMTguMDA3NjINCkdkYcWEc2ssNTQuMzUyMCwxOC42NDY2DQpHb3J6w7N3LDUyLjczNjc5LCAxNS4yMjg3OA0KS2F0b3dpY2UsNTAuMjY0OSwxOS4wMjM4DQpLaWVsY2UsNTAuODY2MSwyMC42MjgwDQpLcmFrw7N3LDUwLjA2NDcsMTkuOTQ1MA0KTHVibGluLDUxLjI0NjUsMjIuNTY4NA0KxYHDs2TFuiw1MS43NTkyLDE5LjQ1NTANCk9sc3p0eW4sNTMuNzc4NCwyMC40ODAxDQpPcG9sZSw1MC42NzU0LDE3LjkyMTMNClBvem5hxYQsNTIuNDA2NCwxNi45MjUyDQpSemVzesOzdyw1MC4wNDEyLDIxLjk5OTANClN6Y3plY2luLDUzLjQyODksMTQuNTUzMA0KVG9ydcWELDUzLjAxMzgsMTguODk4NA0KV2Fyc3phd2EsNTIuMjI5NywyMS4wMTIyDQpXcm9jxYJhdyw1MS4xMDc5LDE3LjAzODUNClppZWxvbmEgR8OzcmEsNTEuOTM1NiwxNS41MDY0DQo=", "type": "binary"}, {"name": "data\\city_late.csv", "content": "station;january;february;march;april;may;june;july;august;september;october;november;december\nWroc\u0139\u201aaw G\u0139\u201a\u0102\u0142wny;0.8666;0.8838;0.8451;0.8771;0.8588;0.7865;0.7398;0.7805;0.8148;0.798;0.8061;0.8139\nPozna\u0139\u201e G\u0139\u201a\u0102\u0142wny;0.8722;0.8709;0.8658;0.8882;0.8688;0.8316;0.8196;0.8272;0.8787;0.8847;0.8561;0.8298\nKatowice;0.8757;0.8976;0.858;0.8873;0.8772;0.8375;0.8232;0.8408;0.8933;0.884;0.8738;0.7988\nKrak\u0102\u0142w G\u0139\u201a\u0102\u0142wny;0.8582;0.877;0.7879;0.8796;0.8633;0.8314;0.8131;0.8215;0.8988;0.9004;0.8675;0.7853\nWarszawa Centralna;0.8185;0.8238;0.758;0.7952;0.7516;0.7215;0.699;0.7066;0.7917;0.7782;0.7651;0.742\nOpole G\u0139\u201a\u0102\u0142wne;0.7694;0.8134;0.7241;0.7875;0.7904;0.6751;0.624;0.6349;0.6939;0.6639;0.6086;0.585\nGda\u0139\u201esk G\u0139\u201a\u0102\u0142wny;0.9196;0.9275;0.9241;0.922;0.9119;0.8666;0.8156;0.8262;0.8887;0.8964;0.8894;0.8595\nRzesz\u0102\u0142w G\u0139\u201a\u0102\u0142wny;0.8977;0.91;0.7969;0.9099;0.8647;0.7956;0.7853;0.786;0.9094;0.8591;0.9192;0.8744\nBydgoszcz G\u0139\u201a\u0102\u0142wna;0.8715;0.8722;0.8485;0.8456;0.871;0.8217;0.745;0.7844;0.894;0.8861;0.8563;0.7967\nSzczecin G\u0139\u201a\u0102\u0142wny;0.8936;0.876;0.9042;0.9115;0.9122;0.8401;0.8095;0.8379;0.8842;0.8719;0.8898;0.8949\nZielona G\u0102\u0142ra G\u0139\u201a\u0102\u0142wna;0.8452;0.8171;0.8007;0.8074;0.7919;0.7222;0.7267;0.7851;0.7869;0.8237;0.8113;0.7993\nL\u0102\u0142d\u0139\u015f Widzew;0.9063;0.9412;0.9191;0.948;0.9352;0.898;0.8227;0.862;0.8803;0.8915;0.8874;0.8527\nToru\u0139\u201e G\u0139\u201a\u0102\u0142wny;0.9035;0.9006;0.8763;0.863;0.8965;0.8287;0.8438;0.8106;0.8955;0.8939;0.8786;0.8121\nLublin G\u0139\u201a\u0102\u0142wny;0.914;0.925;0.8486;0.9039;0.8257;0.8613;0.8442;0.8704;0.918;0.9005;0.8788;0.8148\nOlsztyn G\u0139\u201a\u0102\u0142wny;0.9334;0.9331;0.9358;0.8952;0.9233;0.8538;0.8073;0.7936;0.887;0.855;0.8918;0.8563\nKielce;0.9059;0.9188;0.901;0.935;0.886;0.8572;0.8603;0.8843;0.8977;0.8918;0.802;0.8051\nGorz\u0102\u0142w Wielkopolski;0.8405;0.7692;0.8057;0.8153;0.8027;0.7478;0.7522;0.8054;0.6794;0.7192;0.7344;0.598\nBia\u0139\u201aystok;0.8586;0.8489;0.8745;0.9016;0.8914;0.8846;0.8785;0.8787;0.8688;0.8768;0.8915;0.7884\n", "type": "text"}, {"name": "data\\map.png", "content": "", "type": "binary"}]